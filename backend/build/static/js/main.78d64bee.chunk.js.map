{"version":3,"sources":["Components/ScoreBoard/BoardRows.jsx","Components/ScoreBoard/ScoreBoard.jsx","Components/Utility/Components/NumberButtons.jsx","Actions/actions.js","Components/Game/GameCard/useGameCard.js","Components/ScoreBoard/calculateScore.js","Components/ScoreBoard/Score.jsx","Components/Game/GameCard/GameCard.jsx","Components/Utility/findWinner.js","Components/Game/GameResult/useGameResult.js","Components/Utility/utils.js","Components/Utility/Components/CustomModal.jsx","Components/Game/GameResult/GameResult.jsx","Components/NavBar/NavBar.jsx","Components/Game/Game.jsx","Components/Landing/Landing.jsx","Components/Players/PlayerNamesForm/validatePlayerForm.js","Components/Players/PlayerNamesForm/usePlayerForm.js","Components/Players/PlayerNamesForm/PlayerForm.jsx","Components/Players/PlayerCountForm.jsx","Components/History/HistoryCardBody.jsx","Components/History/HistoryCard.jsx","Components/History/History.jsx","Components/History/getHistory.js","App.js","reportWebVitals.js","Reducers/bowlingReducer.js","Reducers/reducer.js","index.js"],"names":["BoardRows","frames","getThrowValue","throwIndex","undefined","className","scope","ScoreBoard","length","Table","NumberButtons","activeButtons","handleThrow","playerName","handleClick","event","parseInt","target","id","Array","map","x","index","Button","color","onClick","doSaveWinner","dispatch","matchID","winner","hasWinnerName","type","data","name","generateinitialGameObject","MatchID","playerNames","nameObj","Object","values","score","frame","useGameCard","useDispatch","useState","setActiveButtons","setFrames","rollCounter","setRollCounter","handleLastFrame","useEffect","frameCompleted","doMarkFramesCompleted","doAddThrowsToFrame","pinsDropped","handleScore","doSaveScore","processThrows","throws","filter","calculateScore","tInx","i","Score","onTotalScore","setScore","GameCard","Card","CardHeader","CardBody","CardFooter","findWinner","gameDetails","gameArray","keys","player","push","every","ins","isDraw","result","highestScorer","reduce","prev","curr","getHighestScorer","useGameResult","onGameResultSave","modal","setModal","setWinner","game","useSelector","state","bowlingReducer","gameObject","includes","hasOwnProperty","toggle","handleSave","CustomModal","heading","description","onHandleToggle","onSave","showSave","children","handleToggle","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","GameResult","NavBar","showButtons","history","useHistory","goBack","Navbar","dark","Nav","navbar","NavItem","NavLink","NavbarBrand","Game","gameState","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","console","log","Landing","handleRedirect","size","validatePlayerForm","names","playerCount","errors","playerIndex","NameArray","Set","duplicates","usePlayerForm","setErrors","setPlayerNames","handleChange","value","trim","handleSubmit","preventDefault","validationErrors","randomID","Math","round","random","toString","doSaveMatchId","generateAndSaveMatchID","doSavePlayerNames","doInitializeGame","PlayerForm","Form","onSubmit","FormGroup","Label","for","Input","invalid","onChange","e","FormFeedback","PlayerCountForm","setPlayerCount","doSavePlayerCount","ButtonGroup","block","active","HistoryCardBody","setPlayer","match","handleModal","HistoryCard","History","games","setGames","isLoadingFinished","setisLoadingFinished","a","gameHistory","_id","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initial_state","action","createRootReducer","combineReducers","router","connectRouter","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78d64bee.chunk.js","sourcesContent":["const BoardRows = ({ frames }) => {\r\n  const getThrowValue = (throwIndex) => {\r\n    return frames[throwIndex] !== null || frames[throwIndex] !== undefined\r\n      ? frames[throwIndex]\r\n      : \"\";\r\n  };\r\n  return (\r\n    <tbody className=\"text-center\">\r\n      <tr>\r\n        <th scope=\"row\">1</th>\r\n        <td>{getThrowValue(0)}</td>\r\n        <td>{getThrowValue(1)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">2</th>\r\n        <td>{getThrowValue(2)}</td>\r\n        <td>{getThrowValue(3)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">3</th>\r\n        <td>{getThrowValue(4)}</td>\r\n        <td>{getThrowValue(5)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">4</th>\r\n        <td>{getThrowValue(6)}</td>\r\n        <td>{getThrowValue(7)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">5</th>\r\n        <td>{getThrowValue(8)}</td>\r\n        <td>{getThrowValue(9)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">6</th>\r\n        <td>{getThrowValue(10)}</td>\r\n        <td>{getThrowValue(11)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">7</th>\r\n        <td>{getThrowValue(12)}</td>\r\n        <td>{getThrowValue(13)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">8</th>\r\n        <td>{getThrowValue(14)}</td>\r\n        <td>{getThrowValue(15)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">9</th>\r\n        <td>{getThrowValue(16)}</td>\r\n        <td>{getThrowValue(17)}</td>\r\n        <td>-</td>\r\n      </tr>\r\n      <tr>\r\n        <th scope=\"row\">10</th>\r\n        <td>{getThrowValue(18)}</td>\r\n        <td>{getThrowValue(19)}</td>\r\n        <td>{getThrowValue(20)}</td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\nexport default BoardRows;\r\n","import { Table } from \"reactstrap\";\r\nimport TableRows from \"./BoardRows\";\r\n\r\nconst ScoreBoard = ({ frames }) => {\r\n  return (\r\n    <div>\r\n      {frames && frames.length > 0 && (\r\n        <Table data-testid=\"scoreboard\">\r\n          <thead className=\"text-center\">\r\n            <tr>\r\n              <th>Frames</th>\r\n              <th>Throw 1</th>\r\n              <th>Throw 2</th>\r\n              <th>Throw 3</th>\r\n            </tr>\r\n          </thead>\r\n          <TableRows frames={frames}></TableRows>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ScoreBoard;\r\n","import { Button } from \"reactstrap\";\r\nimport \"../../../css/numberButton.css\";\r\nconst NumberButtons = ({ activeButtons, handleThrow, playerName }) => {\r\n  const handleClick = (event) => {\r\n    handleThrow(parseInt(event.target.id));\r\n  };\r\n  return (\r\n    <div>\r\n      {activeButtons > 0 &&\r\n        [...Array(activeButtons)].map((x, index) => {\r\n          return (\r\n            <Button\r\n              className=\"numberButton\"\r\n              color=\"secondary\"\r\n              key={index}\r\n              data-testid={playerName + index}\r\n              id={index}\r\n              onClick={handleClick}\r\n            >\r\n              {index}\r\n            </Button>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\nexport default NumberButtons;\r\n","export const doSavePlayerCount = (dispatch, playerCount) => {\r\n  dispatch({\r\n    type: \"PLAYER_COUNT\",\r\n    data: playerCount,\r\n  });\r\n};\r\n\r\nexport const doSavePlayerNames = (dispatch, playerNames) => {\r\n  dispatch({\r\n    type: \"PLAYER_NAMES\",\r\n    data: Object.values(playerNames),\r\n  });\r\n};\r\n\r\nexport const doSaveMatchId = (dispatch, randomID) => {\r\n  dispatch({\r\n    type: \"SAVE_MATCH_ID\",\r\n    data: randomID,\r\n  });\r\n};\r\n\r\nexport const doInitializeGame = (dispatch, MatchID, playerNames) => {\r\n  const initialGameObject = generateinitialGameObject(MatchID, playerNames);\r\n  dispatch({\r\n    type: \"SAVE_INITAL_GAME\",\r\n    data: initialGameObject,\r\n  });\r\n};\r\n\r\nexport const doSaveScore = (dispatch, matchID, playerName, score) => {\r\n  dispatch({\r\n    type: \"SAVE_SCORE\",\r\n    data: {\r\n      matchID: matchID,\r\n      name: playerName,\r\n      score: score,\r\n    },\r\n  });\r\n};\r\n\r\nexport const doMarkFramesCompleted = (\r\n  dispatch,\r\n  matchID,\r\n  playerName,\r\n  frameCompleted\r\n) => {\r\n  dispatch({\r\n    type: \"SAVE_FRAME_COMPLETED\",\r\n    data: {\r\n      matchID: matchID,\r\n      name: playerName,\r\n      frameCompleted: frameCompleted,\r\n    },\r\n  });\r\n};\r\n\r\nexport const doAddThrowsToFrame = (dispatch, matchID, playerName, frames) => {\r\n  dispatch({\r\n    type: \"ADD_FRAME_TO_GAME\",\r\n    data: {\r\n      matchID: matchID,\r\n      name: playerName,\r\n      frame: frames,\r\n    },\r\n  });\r\n};\r\n\r\nexport const doSaveWinner = (dispatch, matchID, winner, hasWinnerName) => {\r\n  dispatch({\r\n    type: \"SAVE_WINNER\",\r\n    data: {\r\n      name: hasWinnerName ? winner.name : \"DRAW\",\r\n      matchID: parseInt(matchID),\r\n    },\r\n  });\r\n};\r\n\r\nconst generateinitialGameObject = (MatchID, playerNames) => {\r\n  let nameObj = {};\r\n  Object.values(playerNames).map((name) => {\r\n    nameObj[name] = { score: 0, frame: [] };\r\n  });\r\n  return { [MatchID]: nameObj };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  doAddThrowsToFrame,\r\n  doMarkFramesCompleted,\r\n  doSaveScore,\r\n} from \"../../../Actions/actions\";\r\n\r\nconst useGameCard = (playerName, matchID) => {\r\n  const dispatch = useDispatch();\r\n  const [activeButtons, setActiveButtons] = useState(11);\r\n  const [frames, setFrames] = useState([]);\r\n  let [rollCounter, setRollCounter] = useState(1);\r\n\r\n  const handleThrow = (pinsDropped) => {\r\n    if (rollCounter % 2 == 0) {\r\n      setActiveButtons(11);\r\n    } else {\r\n      setActiveButtons(11 - pinsDropped);\r\n    }\r\n    setFrames((frames) => [...frames, pinsDropped]);\r\n    setRollCounter((rollCounter) => rollCounter + 1);\r\n    if (pinsDropped === 10 && rollCounter < 19) {\r\n      handleThrow(0);\r\n    }\r\n  };\r\n\r\n  const isEligibleForBonusThrow = () => {\r\n    if (\r\n      frames[rollCounter - 2] + frames[rollCounter - 3] === 10 ||\r\n      frames[rollCounter - 3] === 10\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleLastFrame = () => {\r\n    if (rollCounter === 20) {\r\n      if (frames[rollCounter - 2] == 10) {\r\n        setActiveButtons(11);\r\n      }\r\n    }\r\n    if (rollCounter === 21) {\r\n      if (isEligibleForBonusThrow()) {\r\n        setActiveButtons(11);\r\n      } else {\r\n        setActiveButtons(null);\r\n      }\r\n    }\r\n    if (rollCounter === 22) {\r\n      setActiveButtons(null);\r\n    }\r\n  };\r\n\r\n  const saveProgress = () => {\r\n    doAddThrowsToFrame(dispatch, matchID, playerName, frames);\r\n  };\r\n\r\n  const handleScore = (score) => {\r\n    doSaveScore(dispatch, matchID, playerName, score);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rollCounter > 19) {\r\n      handleLastFrame();\r\n    }\r\n    if (frames.length > 0 && activeButtons === null) {\r\n      doMarkFramesCompleted(dispatch, matchID, playerName, true);\r\n    }\r\n    saveProgress();\r\n  }, [rollCounter, frames, activeButtons]);\r\n\r\n  return { activeButtons, frames, handleThrow, handleScore };\r\n};\r\n\r\nexport default useGameCard;\r\n","const calculateScore = (frames) => {\r\n  const throws = processThrows(frames);\r\n  let tInx = 0;\r\n  let score = 0;\r\n  if (throws.length > 0) {\r\n    for (let i = 0; i < 10; i++) {\r\n      if (throws[tInx] === 10) {\r\n        if (throws[tInx + 1] && throws[tInx + 2]) {\r\n          score += 10 + throws[tInx + 1] + throws[tInx + 2];\r\n          tInx++;\r\n          continue;\r\n        }\r\n      } else {\r\n        if (throws[tInx] + throws[tInx + 1] === 10) {\r\n          if (throws[tInx] && throws[tInx + 1] && throws[tInx + 2]) {\r\n            score += throws[tInx] + throws[tInx + 1] + throws[tInx + 2];\r\n            tInx += 2;\r\n          }\r\n        } else {\r\n          if (throws[tInx + 1]) {\r\n            score += throws[tInx] + throws[tInx + 1];\r\n            tInx += 2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return score;\r\n  }\r\n};\r\n\r\n/* Delete all the 0s that come in Strike's frame. \r\n   i.e. delete 0 immediately after 10, if not last frame.\r\n*/\r\nconst processThrows = (frames) => {\r\n  let data = [...frames];\r\n  for (let throws = 0; throws < data.length; throws++) {\r\n    if (data[throws] == 10 && data[throws + 1] == 0) {\r\n      data[throws + 1] = \"x\";\r\n    }\r\n  }\r\n  data = data.filter((data) => {\r\n    return data != \"x\";\r\n  });\r\n  return data;\r\n};\r\nexport default calculateScore;\r\n","import { useEffect, useState } from \"react\";\r\nimport calculateScore from \"./calculateScore\";\r\nconst Score = ({ frames, onTotalScore, playerName }) => {\r\n  const [score, setScore] = useState(0);\r\n  useEffect(() => {\r\n    setScore(calculateScore(frames));\r\n    onTotalScore(score);\r\n  }, [frames, score]);\r\n  return (\r\n    <div>\r\n      <h4 data-testid={playerName + \"_score\"}>Total Score: {score || 0}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import ScoreBoard from \"../../ScoreBoard/ScoreBoard\";\r\nimport NumberButtons from \"../../Utility/Components/NumberButtons\";\r\nimport useGameCard from \"./useGameCard\";\r\nimport { Card, CardHeader, CardFooter, CardBody } from \"reactstrap\";\r\nimport Score from \"../../ScoreBoard/Score\";\r\n\r\nconst GameCard = ({ playerName, matchID }) => {\r\n  const { activeButtons, frames, handleThrow, handleScore } = useGameCard(\r\n    playerName,\r\n    matchID\r\n  );\r\n  return (\r\n    <Card className=\"mt-4\">\r\n      <CardHeader>\r\n        <h4>Player: {playerName}</h4>\r\n      </CardHeader>\r\n      <CardBody className=\"text-center\">\r\n        <ScoreBoard frames={frames} />\r\n        <NumberButtons\r\n          activeButtons={activeButtons}\r\n          handleThrow={handleThrow}\r\n          playerName={playerName}\r\n        />\r\n      </CardBody>\r\n      <CardFooter>\r\n        <Score\r\n          frames={frames}\r\n          onTotalScore={handleScore}\r\n          playerName={playerName}\r\n        />\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\nexport default GameCard;\r\n","export const isDraw = (gameArray) => {\r\n  return gameArray.every((ins) => ins.score === gameArray[0].score);\r\n};\r\n\r\nexport const getHighestScorer = (gameArray) => {\r\n  return gameArray.reduce((prev, curr) => {\r\n    return prev.score > curr.score ? prev : curr;\r\n  });\r\n};\r\n\r\nconst findWinner = (gameDetails) => {\r\n  const gameArray = [];\r\n  Object.keys(gameDetails).map((player) => {\r\n    gameArray.push({\r\n      name: player,\r\n      score: gameDetails[player].score,\r\n      frame: gameDetails[player].frame,\r\n    });\r\n  });\r\n  if (isDraw(gameArray)) {\r\n    return { result: \"Game is Tied\" };\r\n  } else {\r\n    const highestScorer = getHighestScorer(gameArray);\r\n    highestScorer[\r\n      \"result\"\r\n    ] = `${highestScorer.name} has won the game with ${highestScorer.score} points.`;\r\n    return highestScorer;\r\n  }\r\n};\r\nexport default findWinner;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { doSaveWinner } from \"../../../Actions/actions\";\r\nimport findWinner from \"../../Utility/findWinner\";\r\nimport { areFramesCompleted } from \"../../Utility/utils\";\r\n\r\nconst useGameResult = (playerNames, matchID, onGameResultSave) => {\r\n  const [modal, setModal] = useState(false);\r\n  const [winner, setWinner] = useState({});\r\n  const dispatch = useDispatch();\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const game = useSelector((state) => state.bowlingReducer.game[matchID]);\r\n  const handleSave = () => {\r\n    onGameResultSave();\r\n  };\r\n  useEffect(() => {\r\n    if (areFramesCompleted(game)) {\r\n      setModal(true);\r\n    }\r\n  }, [game]);\r\n  useEffect(() => {\r\n    if (modal) {\r\n      setWinner(findWinner(game, playerNames));\r\n    }\r\n  }, [modal]);\r\n  useEffect(() => {\r\n    if (winner.hasOwnProperty(\"result\")) {\r\n      if (winner.name) {\r\n        doSaveWinner(dispatch, matchID, winner, true);\r\n      } else {\r\n        doSaveWinner(dispatch, matchID, winner, false);\r\n      }\r\n    }\r\n  }, [winner]);\r\n  return { modal, winner, toggle, handleSave };\r\n};\r\nexport default useGameResult;\r\n","import { doSaveMatchId } from \"../../Actions/actions\";\r\n\r\nexport const generateAndSaveMatchID = (dispatch) => {\r\n  const randomID = Math.round(\r\n    Math.random() * Math.random() * 1000000\r\n  ).toString();\r\n  doSaveMatchId(dispatch, randomID);\r\n  return randomID;\r\n};\r\n\r\nexport const areFramesCompleted = (gameObject) => {\r\n  if (\r\n    Object.keys(gameObject).length > 0 &&\r\n    !Object.keys(gameObject).includes(\"winner\")\r\n  ) {\r\n    return Object.keys(gameObject).every(\r\n      (playerName) => gameObject[playerName].frameCompleted\r\n    );\r\n  }\r\n  return false;\r\n};\r\n","import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nconst CustomModal = ({\r\n  heading,\r\n  description,\r\n  onHandleToggle,\r\n  modal,\r\n  onSave,\r\n  showSave,\r\n  children,\r\n}) => {\r\n  const handleToggle = () => {\r\n    onHandleToggle();\r\n  };\r\n  const handleEvent = () => {\r\n    onSave();\r\n    onHandleToggle();\r\n  };\r\n  return (\r\n    <Modal isOpen={modal} toggle={handleToggle}>\r\n      <ModalHeader toggle={handleToggle}>{heading}</ModalHeader>\r\n      {description && <ModalBody>{description}</ModalBody>}\r\n      <ModalBody>{children}</ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={handleToggle}\r\n          data-testid=\"CloseModal\"\r\n        >\r\n          Close\r\n        </Button>\r\n        {showSave && (\r\n          <Button color=\"primary\" onClick={handleEvent} data-testid=\"SaveModal\">\r\n            Save\r\n          </Button>\r\n        )}\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\nexport default CustomModal;\r\n","import useGameResult from \"./useGameResult\";\r\nimport CustomModal from \"../../Utility/Components/CustomModal\";\r\nconst GameResult = ({ playerNames, matchID, onGameResultSave }) => {\r\n  const { modal, winner, toggle, handleSave } = useGameResult(\r\n    playerNames,\r\n    matchID,\r\n    onGameResultSave\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"mt-3 text-center\">\r\n        {winner.hasOwnProperty(\"result\") && !modal ? (\r\n          <div className=\"text-center mt-2\">\r\n            <p className=\"text-info\">{winner.result}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <CustomModal\r\n        modal={modal}\r\n        onHandleToggle={toggle}\r\n        heading=\"Result\"\r\n        onSave={handleSave}\r\n        showSave={true}\r\n      >\r\n        {winner.result ? <div>{winner.result}</div> : \"\"}\r\n      </CustomModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameResult;\r\n","import React, { useState } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../../css/navBar.css\";\r\n\r\nconst NavBar = ({ showButtons }) => {\r\n  const history = useHistory();\r\n  const handleClick = (event) => {\r\n    if (event.target.id === \"back\") {\r\n      history.goBack();\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        color=\"primary\"\r\n        dark\r\n        className={!showButtons ? \"justify-content-center\" : \"\"}\r\n      >\r\n        <Nav className=\"mr-auto nav-button\" navbar className=\"ps-3\">\r\n          <NavItem>\r\n            {showButtons && (\r\n              <NavLink id=\"back\" onClick={handleClick}>\r\n                Back\r\n              </NavLink>\r\n            )}\r\n          </NavItem>\r\n        </Nav>\r\n        <NavbarBrand>Bowling Arena</NavbarBrand>\r\n        <Nav className=\"mr-auto nav-button\" navbar className=\"pe-3\">\r\n          <NavItem>\r\n            {showButtons && (\r\n              <NavLink id=\"home\" onClick={handleClick}>\r\n                Home\r\n              </NavLink>\r\n            )}\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import GameCard from \"./GameCard/GameCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GameResult from \"./GameResult/GameResult\";\r\nimport \"../../css/game.css\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nconst Game = () => {\r\n  const gameState = useSelector((state) => state.bowlingReducer);\r\n  const { matchID, playerNames } = gameState;\r\n  const handleGameSave = () => {\r\n    fetch(\"/api/bowling/add\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(gameState),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(\"Res\", res.data);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <NavBar showButtons={true} />\r\n      <div className=\"application\">\r\n        <div className=\"\">\r\n          <h4 className=\"text-center\">Match ID: {matchID}</h4>\r\n        </div>\r\n        <div>\r\n          <GameResult\r\n            name={playerNames}\r\n            matchID={matchID}\r\n            onGameResultSave={handleGameSave}\r\n          />\r\n          <div>\r\n            {playerNames.map((name) => {\r\n              return (\r\n                <div key={name}>\r\n                  <GameCard playerName={name} matchID={matchID}></GameCard>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"../../css/landing.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nconst Landing = () => {\r\n  const history = useHistory();\r\n  const handleRedirect = (event) => {\r\n    if (event.target.id === \"play\") {\r\n      history.push(\"/PlayerCountSelector\");\r\n    } else {\r\n      history.push(\"/history\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NavBar showButtons={false} />\r\n      <div className=\"application\">\r\n        <div className=\"text-center\">\r\n          <h1>Welcome to Bowling Arena</h1>\r\n          <div className=\"d-grid gap-2 mt-5\">\r\n            <Button\r\n              size=\"lg\"\r\n              id=\"play\"\r\n              onClick={handleRedirect}\r\n              color=\"primary\"\r\n            >\r\n              Let's Play!\r\n            </Button>\r\n          </div>\r\n          <div>or</div>\r\n          <div className=\"d-grid gap-2 mt-2\">\r\n            <Button\r\n              size=\"lg\"\r\n              id=\"history\"\r\n              onClick={handleRedirect}\r\n              color=\"primary\"\r\n            >\r\n              Check History\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Landing;\r\n","const validatePlayerForm = (names, playerCount) => {\r\n  let errors = {};\r\n  for (let playerIndex = 1; playerIndex <= playerCount; playerIndex++) {\r\n    if (!names.hasOwnProperty(`Player${playerIndex}`)) {\r\n      errors[`Player${playerIndex}`] = `Please enter Player${playerIndex} name`;\r\n    }\r\n  }\r\n  const NameArray = Object.values(names);\r\n  if (\r\n    new Set(NameArray).size !== NameArray.length &&\r\n    NameArray.length === playerCount\r\n  ) {\r\n    errors.duplicates = \"Please enter unique name for all the Players\";\r\n  }\r\n  return errors;\r\n};\r\nexport default validatePlayerForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport validatePlayerForm from \"./validatePlayerForm\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { doSavePlayerNames, doInitializeGame } from \"../../../Actions/actions\";\r\nimport { generateAndSaveMatchID } from \"../../Utility/utils\";\r\n\r\nconst usePlayerForm = () => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [playerNames, setPlayerNames] = useState([]);\r\n  const playerCount = useSelector((state) => state.bowlingReducer.playerCount);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!playerCount) {\r\n      history.push(\"/PlayerCountSelector\");\r\n    }\r\n  }, [history, playerCount]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const validationErrors = validatePlayerForm(playerNames, playerCount);\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      const MatchID = generateAndSaveMatchID(dispatch);\r\n      doSavePlayerNames(dispatch, playerNames);\r\n      doInitializeGame(dispatch, MatchID, playerNames);\r\n      history.push(\"/GameHome\");\r\n    } else {\r\n      setErrors({\r\n        ...validationErrors,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setPlayerNames({\r\n      ...playerNames,\r\n      [event.target.id]: event.target.value.trim(),\r\n    });\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    errors,\r\n    playerNames,\r\n    playerCount,\r\n  };\r\n};\r\nexport default usePlayerForm;\r\n","import {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport NavBar from \"../../NavBar/NavBar\";\r\n\r\nimport usePlayerForm from \"./usePlayerForm\";\r\nconst PlayerForm = () => {\r\n  const { handleSubmit, errors, handleChange, playerCount } = usePlayerForm();\r\n  return (\r\n    <div>\r\n      <NavBar showButtons={true} />\r\n      <div className=\"application\">\r\n        <h2 className=\"text-center\">Please enter the Player Names:</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          {[...Array(playerCount)].map((player, index) => {\r\n            return (\r\n              <FormGroup key={index} className=\"mt-3\">\r\n                <Label for={\"Player\" + (index + 1)} className=\"text-left ps-1\">\r\n                  {\"Player \" + (index + 1)}\r\n                </Label>\r\n                <Input\r\n                  className=\"mt-1  text-secondary\"\r\n                  invalid={\r\n                    errors.hasOwnProperty([\"Player\" + (index + 1)])\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  id={\"Player\" + (index + 1)}\r\n                  onChange={(e) => handleChange(e)}\r\n                ></Input>\r\n                {errors.hasOwnProperty([\"Player\" + (index + 1)]) && (\r\n                  <FormFeedback>{errors[\"Player\" + (index + 1)]}</FormFeedback>\r\n                )}\r\n              </FormGroup>\r\n            );\r\n          })}\r\n          {errors.hasOwnProperty(\"duplicates\") ? (\r\n            <p className=\"text-danger\">{errors.duplicates}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"d-grid gap-2 mt-4\">\r\n            <Button className=\"text-center\" color=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PlayerForm;\r\n","import { Button, ButtonGroup } from \"reactstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { doSavePlayerCount } from \"../../Actions/actions\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nconst PlayerCountForm = () => {\r\n  const history = useHistory();\r\n  const [playerCount, setPlayerCount] = useState(null);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    doSavePlayerCount(dispatch, playerCount);\r\n    if (playerCount > 1) {\r\n      history.push(\"/PlayerNameForm\");\r\n    }\r\n  }, [playerCount, dispatch, history]);\r\n  return (\r\n    <div>\r\n      <NavBar showButtons={true} />\r\n      <div className=\"application\">\r\n        <h2 className=\"text-center\">\r\n          Please select the number of players playing.\r\n        </h2>\r\n        <ButtonGroup className=\"d-grid gap-2 mt-4\">\r\n          <Button\r\n            color=\"primary\"\r\n            block\r\n            onClick={() => setPlayerCount(2)}\r\n            active={playerCount === 2}\r\n          >\r\n            Two\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            block\r\n            onClick={() => setPlayerCount(3)}\r\n            active={playerCount === 3}\r\n          >\r\n            Three\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            block\r\n            onClick={() => setPlayerCount(4)}\r\n            active={playerCount === 4}\r\n          >\r\n            Four\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PlayerCountForm;\r\n","import { useState } from \"react\";\r\nimport ScoreBoard from \"../ScoreBoard/ScoreBoard\";\r\nimport CustomModal from \"../Utility/Components/CustomModal\";\r\n\r\nconst HistoryCardBody = ({ game }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const [player, setPlayer] = useState(\"\");\r\n  const toggle = () => setModal(!modal);\r\n  const handleModal = (player) => {\r\n    setPlayer(player);\r\n    setModal(true);\r\n  };\r\n  return (\r\n    <div>\r\n      {Object.values(game.playerNames).map((player, index) => {\r\n        return (\r\n          <div\r\n            key={player}\r\n            className={index !== 0 ? \"text-start mt-4\" : \"text-start\"}\r\n          >\r\n            <h6>Player: {player}</h6>\r\n            <div>Score : {game.match[player].score}</div>\r\n            <div>\r\n              Frame :\r\n              <a\r\n                data-testid={player + index}\r\n                onClick={(e) => handleModal(player)}\r\n                className=\"link-info\"\r\n              >\r\n                Click to see frame data\r\n              </a>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {player !== \"\" && (\r\n        <CustomModal\r\n          heading={\"Frames for \" + player}\r\n          modal={modal}\r\n          onHandleToggle={toggle}\r\n        >\r\n          <ScoreBoard frames={game.match[player].frame}></ScoreBoard>\r\n        </CustomModal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default HistoryCardBody;\r\n","import { Card, CardHeader, CardFooter, CardBody } from \"reactstrap\";\r\nimport HistoryCardBody from \"./HistoryCardBody\";\r\nconst HistoryCard = ({ game }) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"mt-4\">\r\n        <CardHeader>\r\n          <h6>Match ID: {game.matchID}</h6>\r\n          {game.match.winner === \"DRAW\" ? (\r\n            <h5>Game was a Draw</h5>\r\n          ) : (\r\n            <h4>Winner: {game.match.winner}</h4>\r\n          )}\r\n        </CardHeader>\r\n        <CardBody className=\"text-center\">\r\n          <HistoryCardBody game={game} />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default HistoryCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport { getHistoryData } from \"./getHistory\";\r\nimport HistoryCard from \"./HistoryCard\";\r\n\r\nconst History = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [isLoadingFinished, setisLoadingFinished] = useState(false);\r\n  useEffect(async () => {\r\n    try {\r\n      const gameHistory = await getHistoryData();\r\n      setGames(gameHistory);\r\n      setisLoadingFinished(true);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NavBar showButtons={true} />\r\n      <div className=\"application\">\r\n        {isLoadingFinished && (\r\n          <div>\r\n            {games && games.length > 0 ? (\r\n              games.map((game) => {\r\n                return (\r\n                  <HistoryCard game={game.game} key={game._id}></HistoryCard>\r\n                );\r\n              })\r\n            ) : (\r\n              <h4 className=\"text-center mt-4\">No History Identified</h4>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {!isLoadingFinished && <div className=\"text-center\">Loading</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default History;\r\n","export const getHistoryData = () => {\r\n  return fetch(\"/api/bowling/get\")\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n","import { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Game from \"./Components/Game/Game\";\nimport Landing from \"./Components/Landing/Landing\";\nimport PlayerForm from \"./Components/Players/PlayerNamesForm/PlayerForm\";\nimport PlayerCountForm from \"./Components/Players/PlayerCountForm\";\nimport History from \"./Components/History/History\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Landing}></Route>\n        <Route\n          exact\n          path=\"/PlayerCountSelector\"\n          component={PlayerCountForm}\n        ></Route>\n        <Route exact path=\"/PlayerNameForm\" component={PlayerForm}></Route>\n        <Route exact path=\"/GameHome\" component={Game}></Route>\n        <Route exact path=\"/history\" component={History}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initial_state = {\r\n  playerCount: null,\r\n  playerNames: {},\r\n  game: {},\r\n  matchID: null,\r\n};\r\n\r\nconst bowlingReducer = (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case \"PLAYER_COUNT\":\r\n      return {\r\n        ...state,\r\n        playerCount: action.data,\r\n      };\r\n    case \"PLAYER_NAMES\":\r\n      return {\r\n        ...state,\r\n        playerNames: action.data,\r\n      };\r\n    case \"SAVE_MATCH_ID\":\r\n      return {\r\n        ...state,\r\n        matchID: action.data,\r\n      };\r\n    case \"SAVE_INITAL_GAME\":\r\n      return {\r\n        ...state,\r\n        game: action.data,\r\n      };\r\n    case \"ADD_FRAME_TO_GAME\":\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          [action.data.matchID]: {\r\n            ...state.game[[action.data.matchID]],\r\n            [action.data.name]: {\r\n              ...state.game[action.data.matchID][action.data.name],\r\n              frame: action.data.frame,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case \"SAVE_FRAME_COMPLETED\":\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          [action.data.matchID]: {\r\n            ...state.game[[action.data.matchID]],\r\n            [action.data.name]: {\r\n              ...state.game[action.data.matchID][action.data.name],\r\n              frameCompleted: action.data.frameCompleted,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case \"SAVE_SCORE\":\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          [action.data.matchID]: {\r\n            ...state.game[[action.data.matchID]],\r\n            [action.data.name]: {\r\n              ...state.game[action.data.matchID][action.data.name],\r\n              score: action.data.score,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case \"SAVE_WINNER\":\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          [action.data.matchID]: {\r\n            ...state.game[action.data.matchID],\r\n            winner: action.data.name,\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bowlingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport bowlingReducer from \"./bowlingReducer\";\r\n\r\nconst createRootReducer = (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    bowlingReducer,\r\n  });\r\n\r\nexport default createRootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//Imports for Redux and Redux thunk\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\n//Imports for Router\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware, ConnectedRouter } from \"connected-react-router\";\nimport createRootReducer from \"./Reducers/reducer\";\n\nexport const history = createBrowserHistory();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* const store = createStore(reducer, composeEnhancers(applyMiddleware(thunk))); */\nconst store = createStore(\n  createRootReducer(history),\n  composeEnhancers(applyMiddleware(thunk, routerMiddleware(history)))\n);\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}